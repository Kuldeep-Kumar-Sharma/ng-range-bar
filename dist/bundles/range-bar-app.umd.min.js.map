{"version":3,"sources":["ng://range-bar-app/src/app/modules/ng-range-bar/ng-range-bar.component.ts","ng://range-bar-app/src/app/modules/ng-range-bar/ng-range-bar.module.ts"],"names":["NgRangeBarComponent","EventEmitter","prototype","ngOnInit","onInputChange","val","this","offsetLeft","parseInt","range_slider_value","maxValue","onSelect","emit","Component","args","selector","template","styles","Input","Output","NgRangeBarModule","NgModule","imports","CommonModule","FormsModule","declarations","exports"],"mappings":"2XAAA,IAAAA,EAAA,WA6KE,SAAAA,4BADqB,gBAED,gBACA,iBACQ,iBACY,IAAIC,EAAAA,oBAE5CD,EAAAE,UAAAC,SAAA,aAEAH,EAAAE,UAAAE,cAAA,SAAcC,GACZC,KAAKC,WAAaC,SAAYF,KAAKG,mBAAqBH,KAAKI,SAAY,IAAO,GAAM,IACtFJ,KAAKK,SAASC,KAAKN,KAAKG,yCArL3BI,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,eACVC,SAAU,mUAKVC,OAAQ,CAAC,4uHAqKRC,EAAAA,wBACAA,EAAAA,wBACAA,EAAAA,wBACAC,EAAAA,YAjLH,GCAAC,EAAA,oDAKCC,EAAAA,SAAQP,KAAA,CAAC,CACRQ,QAAS,CACPC,EAAAA,aACAC,EAAAA,aAEFC,aAAc,CACZzB,GAEF0B,QAAQ,CACN1B,SAdJ","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'ng-range-bar',\n  template: `<div class=\"range-slider wrapper\">\n  <input (input)=\"onInputChange($event)\" [(ngModel)]=\"range_slider_value\" range_value class=\"range-slider__range\" type=\"range\" [style.background]=\"barColor\" [min]=\"minValue\" [max]=\"maxValue\" >\n  <div class=\"tooltip\"  [style.left.%]=\"offsetLeft\">{{range_slider_value}}</div>\n  </div>`,\n\n  styles: [`.range-slider {\n    margin: 60px 0 0 0%;\n  }\n  \n  .range-slider {\n    width: 100%;\n  }\n  \n  .range-slider__range {\n    -webkit-appearance: none;\n    width: calc(100% - (73px));\n    height: 10px;\n    border-radius: 5px;\n    background: #d7dcdf;\n    outline: none;\n    padding: 0;\n    margin: 0;\n  }\n\n  .wrapper {\n    text-transform: uppercase;\n    color: #555;\n    font-family: \"Gill Sans\", Impact, sans-serif;\n    font-size: 20px;\n    \n    position: relative;\n    }\n  \n \n  .wrapper .tooltip {\n    background: #b5b5b592;\n    bottom: 100%;\n    color: rgb(7, 7, 7);\n    display: block;\n    margin-bottom: 15px;\n    opacity: 0;\n    border-radius: 0px;\n    padding: 10px;\n    pointer-events: none;\n    position: absolute;\n    -webkit-transform: translateY(10px);\n       -moz-transform: translateY(10px);\n        -ms-transform: translateY(10px);\n         -o-transform: translateY(10px);\n            transform: translateY(10px);\n    -webkit-transition: all .25s ease-out;\n       -moz-transition: all .25s ease-out;\n        -ms-transition: all .25s ease-out;\n         -o-transition: all .25s ease-out;\n            transition: all .25s ease-out;\n  \n  }\n  \n  /* This bridges the gap so you can mouse into the tooltip without it disappearing */\n  .wrapper .tooltip:before {\n    bottom: -20px;\n    content: \"\";\n    display: block;\n    height: 20px;\n    left: 0;\n    position: absolute;\n    width: 100%;\n  }  \n  \n  /* CSS Triangles - see Trevor's post */\n  .wrapper .tooltip:after {\n    border-left: solid transparent 5px;\n    border-right: solid transparent 5px;\n    border-top: solid #b5b5b592 5px;\n    bottom: -10px;\n    content: \" \";\n    height: 0;\n    left: 40%;\n    position: absolute;\n    width: 0;\n  }\n    \n  .wrapper:hover .tooltip {\n    opacity: 1;\n    pointer-events: auto;\n    -webkit-transform: translateY(0px);\n       -moz-transform: translateY(0px);\n        -ms-transform: translateY(0px);\n         -o-transform: translateY(0px);\n            transform: translateY(0px);\n  }\n  \n\n  .range-slider__range::-webkit-slider-thumb {\n    -webkit-appearance: none;\n            appearance: none;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: #2196f3;\n    cursor: pointer;\n    transition: background .15s ease-in-out;\n  }\n  .range-slider__range::-webkit-slider-thumb:hover {\n    background: #2196f3;\n  }\n  .range-slider__range:active::-webkit-slider-thumb {\n    background: #2196f3;\n  }\n  .range-slider__range::-moz-range-thumb {\n    width: 20px;\n    height: 20px;\n    border: 0;\n    border-radius: 50%;\n    background: #2196f3;\n    cursor: pointer;\n    transition: background .15s ease-in-out;\n  }\n  .range-slider__range::-moz-range-thumb:hover {\n    background: #2196f3;\n  }\n  .range-slider__range:active::-moz-range-thumb {\n    background: #2196f3;\n  }\n  .range-slider__range:focus::-webkit-slider-thumb {\n    box-shadow: 0 0 0 3px #fff, 0 0 0 6px #2196f3;\n  }\n  \n  .range-slider__value {\n    display: inline-block;\n    position: relative;\n    width: 60px;\n    color: #fff;\n    line-height: 20px;\n    text-align: center;\n    border-radius: 3px;\n    background: #2c3e50;\n    padding: 5px 10px;\n    margin-left: 8px;\n  }\n  .range-slider__value:after {\n    position: absolute;\n    top: 8px;\n    left: -7px;\n    width: 0;\n    height: 0;\n    border-top: 7px solid transparent;\n    border-right: 7px solid #2c3e50;\n    border-bottom: 7px solid transparent;\n    content: '';\n  }\n  \n  ::-moz-range-track {\n    background: #d7dcdf;\n    border: 0;\n  }\n  \n  input::-moz-focus-inner,\n  input::-moz-focus-outer {\n    border: 0;\n  }\n  .mat-label{\n    font-size: 20px;\n}\n`]\n})\n\nexport class NgRangeBarComponent implements OnInit {\n  range_slider_value = 0;\n  constructor() { }\n  @Input() minValue = 1;\n  @Input() maxValue = 10;\n  @Input() barColor: String = \"\";\n  @Output() onSelect: EventEmitter<any> = new EventEmitter();\n  offsetLeft;\n  ngOnInit() {\n  }\n  onInputChange(val) {\n    this.offsetLeft = parseInt((((this.range_slider_value / this.maxValue) * 100) - 15) + \"\");\n    this.onSelect.emit(this.range_slider_value);\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgRangeBarComponent } from './ng-range-bar.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [    \n    NgRangeBarComponent\n  ],\n  exports:[\n    NgRangeBarComponent\n  ]\n})\nexport class NgRangeBarModule { }\n"]}